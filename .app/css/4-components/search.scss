@use "../2-lib/mixins" as *;
@use "../2-lib/variables" as *;

$search-gutter: var(--icon-link-padding-inline);
$search-gutter-wide: var(--space-4);

.search {
	--cluster: var(--space-2xs) 0;
	position: relative;

	+ noscript {
		--grid-horizontal-alignment: center;
		--grid-gap: var(--space-xs);

		grid-template-columns: auto minmax(0, 1fr);

		padding: var(--space-xs) $global-gutter;
		color: var(--color-neutral-text-contrast);
		border-radius: 0 var(--rounded-md) var(--rounded-md) 0;
		outline: 1px solid var(--color-neutral-bg);
		border-inline-start: 3px solid #dc2626;

		svg {
			color: #dc2626;
		}
	}
}

.search__input {
	position: relative;

	inline-size: calc($sidebar-width - $global-gutter - $global-gutter);
	padding: var(--icon-link-padding-block) $search-gutter;

	border: none;
	border-radius: var(--rounded-md);
	background-color: var(--color-neutral-bg);
	box-shadow: var(--shadow-search-input);

	color: var(--color-neutral-text-contrast);
	transition: background-color 200ms ease;

	@include font-size-browser;

	.search[data-mode="inline"] & {
		inline-size: 100%;
		padding: $search-gutter-wide;
		block-size: var(--space-xl);
		border-radius: var(--rounded-md);

		display: block;
		font-size: inherit;
		letter-spacing: normal;
		line-height: inherit;
	}

	&::placeholder {
		color: var(--color-neutral-text);
		transition: color 200ms ease;
	}

	&:hover {
		background-color: var(--color-neutral-bg-hover);

		&::placeholder {
			color: var(--color-neutral-text-contrast);
		}
	}
}

.search__kbd {
	font-size: var(--font-size-xs);

	position: absolute;
	inset-block-start: 50%;
	inset-inline-end: $search-gutter;
	z-index: 1;
	translate: 0 -50%;

	kbd {
		margin: 0;

		:where(.search:focus-within) & {
			box-shadow: 0 1px 0 0.5px var(--kbd-color-border);
			inset-block-start: 0.5px;
		}
	}
}

.esc {
	opacity: 0;

	&:has(+ .search__input:not(:placeholder-shown)) {
		opacity: 1;
	}
}

.search__popover {
	.search[data-mode="overlay"] & {
		position: absolute;
		inset-block-start: calc(100% + var(--space-2));
		inset-inline-end: 0;

		inline-size: 400px;
		max-block-size: calc(var(--full-vh) - (2 * $header-height));
		border: 1px solid var(--color-neutral-border);
		border-radius: var(--rounded-lg);
		background-color: var(--color-neutral-bg);
		box-shadow: var(--shadow-search-popover);

		overflow: auto;
		z-index: 1;
	}

	.search[data-mode="inline"] & {
		max-inline-size: 100%;
	}
}

.search__info {
	color: var(--color-neutral-text);
	@include font-size-browser;

	.search[data-mode="overlay"] & {
		padding-inline: $search-gutter;
		padding-block: var(--space-2);
		font-size: var(--font-size-sm);
	}
}

:where([data-mode="overlay"] .search__results) {
	> li + li {
		border-block-start: 1px solid var(--color-neutral-border);
	}
}

:where([data-mode="inline"] .search__results) {
	> li + li {
		margin-block-start: var(--space-1);
	}

	a {
		border-radius: var(--rounded-md);
	}
}

.search__result {
	--grid-gap: var(--space-1) #{$search-gutter-wide};

	padding: $search-gutter-wide;
	text-decoration: none;

	svg {
		display: none;
	}

	@media (hover: hover) {
		grid-template-columns: minmax(0, 1fr) auto;

		span {
			grid-column: 1;
		}

		svg {
			grid-column: 2;

			display: block;
			opacity: 0;
			transition: opacity 200ms ease;
		}
	}

	.search__popover:hover & {
		transition: background-color 200ms ease;
	}

	&[aria-selected="true"] {
		background-color: var(--color-primary-bg);

		svg {
			opacity: 1;
			color: var(--color-primary-text);
		}
	}
}

@supports (width: 8cqi) {
	.search__popover {
		container-type: inline-size;
		min-inline-size: 100%;
	}

	.search__result {
		--grid-gap: var(--space-1) 8cqi;
	}
}

.search__result:hover {
	background-color: var(--color-primary-bg);
	text-decoration-line: none;
}

.search__note-title {
	color: var(--color-primary-text);
	font-weight: var(--font-weight-medium);
	line-height: var(--font-line-height-sm);
}

.search__note-content {
	color: var(--color-neutral-text);
	font-size: var(--font-size-sm);
	letter-spacing: 0.02em;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	// max-inline-size: 100%;
}
